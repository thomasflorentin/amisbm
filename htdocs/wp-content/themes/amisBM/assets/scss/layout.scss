@use 'mixins' as mix;

// GRID
// https://css-tricks.com/snippets/css/complete-guide-grid/



.row {
    display: flex;
    flex-wrap: wrap;
    display: grid;
    grid-template-columns: repeat(6, minmax(0, calc(1fr - 20px) ) );
    grid-template-columns: repeat(6, 1fr);
    grid-row-gap: 0;

    @include mix.at-least(medium) {
        grid-column-gap: 40px;
    }
    @include mix.up-to(medium) {
        grid-column-gap: 20px;
    }
}


.m_last {
    grid-row-end: 6;
}



@mixin parse-columns($suffix: ''){

        .#{$suffix}_0col {
            display: none;
        }
        .#{$suffix}_hide {
            display: none;
        }
        .#{$suffix}_show {
            display: block;
        }
        
        @for $i from 1 through 6 {

            .#{$suffix}_#{$i}col {
                grid-column: span #{$i};
                max-width: 100%;
                display: block;
            }

        }
}


@include mix.at-least(minimal) {
    @include parse-columns('s');
}
@include mix.at-least(medium) {
    @include parse-columns('m');
}
@include mix.at-least(large) {
    @include parse-columns('l');
}
